#!/bin/bash
set -ex

######################
##   Prerequisites  ##
######################
mkdir ~/.kube
cp  .kube/config ~/.kube/config
cp .kube/url ~/.kube/url

# director url
URL=$(cat ~/.kube/url)
echo $URL
# Cloning oep-e2e repository which contains all the test scripts
git clone https://$username:$password@github.com/mayadata-io/oep-e2e.git
cd oep-e2e
######################
##   Running test  ##
######################
test_name=alertstore-tablemanager-check
echo $test_name
kubectl get po
sed -i -e 's/generateName: app-check/generateName: alertstore-tablemanager-check/g' \
-e 's/app: app-litmus/app: alertstore-tablemanager-check-litmus/g' \
-e 's/value: test-name/value: alertstore-tablemanager-check/g' \
-e 's/value: default /value: default/g' \
-e 's/value: pod-name/value: alertstore-tablemanager/g' litmus/director/common-checks/run_litmus_test.yml
cat litmus/director/common-checks/run_litmus_test.yml
kubectl create -f litmus/director/common-checks/run_litmus_test.yml
litmus_pod=$(kubectl get po -n litmus | grep $test_name  | awk {'print $1'} | tail -n 1)
echo $litmus_pod
job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
while [[ "$job_status" != "Completed" ]]
do 
    job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
    sleep 6
done
kubectl logs -f $litmus_pod -n litmus
kubectl get po
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
echo $testResult
if [ "$testResult" != Pass ]; then 
exit 1; 
fi
