#!/bin/bash
path=$(pwd)
# Copy kubeconfig
mkdir -p ~/.kube
cp  $path/.awscluster2/config ~/.kube/config

job_id=$(echo $CI_JOB_ID)
pipeline_id=$(echo $CI_PIPELINE_ID)
releaseTag=$(echo $RELEASE_TAG)
case_id=Y4ET

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash utils/pooling jobname:jiva-snapshot
bash utils/e2e-cr-new jobname:jiva-snapshot-clone jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

echo "*******Taking clone of BusyBox snapshot application**********"

################
# LitmusBook 1 #
################
# Cloning oep-e2e repository which contains all the test scripts
git clone https://$username:$password@github.com/openebs/e2e-tests.git

: << EOF
  --------------------------------------------------------------------------------------------------------------------     
 | specAttribute     | kind   |         default value               | test specifc value                              |
  ------------------------------------------------------------------------------------------------------------------- |
 | pvcName           | env    | openebs-busybox                     | busybox-jiva-snapshot                           | 
 | Litmus job label  | label  | app: litmus-clone                   | app: litmus-jiva-clone                          |
 | snapshot name     | env    | value: snapshot-busybox             | value: snapshot-jiva-busybox                    |
 | clone name        | env    | value: clone-busybox                | value: clone-jiva-busybox                       |
 | appNamespace      | env    | app-busybox-ns                      | busybox-jiva-snap                               |
  ---------------------------------------------------------------------------------------------------------------------
EOF

run_id="jiva";test_name=$(bash utils/generate_test_name testcase=create-clone metadata=${run_id})
echo $test_name

cd e2e-tests
cp experiments/functional/clone-creation/run_litmus_test.yml run_jiva_clone_test.yml

sed -i -e 's/value: openebs-busybox/value: busybox-jiva-snapshot/g' \
-e 's/app: litmus-clone/app: litmus-jiva-clone/g' \
-e 's/value: snapshot-busybox/value: snapshot-jiva-busybox/g' \
-e 's/value: clone-busybox/value: clone-jiva-busybox/g' \
-e 's/value: app-busybox-ns/value: busybox-jiva-snap/g' run_jiva_clone_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_jiva_clone_test.yml

cat run_jiva_clone_test.yml

bash ../utils/litmus_job_runner label='app:litmus-jiva-clone' job=run_jiva_clone_test.yml
cd ..
bash utils/dump_cluster_state;
bash utils/event_updater jobname:jiva-snapshot-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
rc_val=$(echo $?)

# Obtain the status of the test using litmusresult(lr) 
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash utils/e2e-cr-new jobname:jiva-snapshot-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult
exit 1;
fi

bash utils/e2e-cr-new jobname:jiva-snapshot-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
