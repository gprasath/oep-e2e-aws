AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  
  ContainerCpu:
    Type: Number
    Default: 2048
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 4096
    Description: How much memory in megabytes to give the container
  Path:
    Type: String
    Default: '*'
    Description: A path on the public load balancer that this service
                 should be connected to. Use * to send all load balancer
                 traffic to this service.
  Priority:
    Type: Number
    Default: 1
    Description: The priority for the routing rule added to the load balancer.
                 This only applies if your have multiple services which have been
                 assigned to different paths on the load balancer.
  Role:
    Type: String
    Default: ''
    Description: (Optional) An IAM role to give the service's containers if the code within needs to
                 access other AWS resources like S3 buckets, DynamoDB tables, etc
  NumberOfChromeNodes:
    Type: Number
    Default: 10
    
  NumberOfChromeInstances:
    Type: Number
    Default: 1

  EcsTaskExecutionRole:
    Type: String
    Default: 'arn:aws:iam::385569096892:role/ecs-iam'
    Description: ARN of ecsTaskExecutionRole
    
  PublicLoadBalancer:
    Type: String
    Default: 'selenium-grid-1311742195.eu-central-1.elb.amazonaws.com'
    Description: Name of load balancer
    
  PublicLoadBalancerArn:
    Type: String
    Default: 'arn:aws:elasticloadbalancing:eu-central-1:385569096892:loadbalancer/app/selenium-grid/d96a2a81b689eb19'
    Description: ARN of Public Load Balancer
    
  TargetGroupArn:
    Type: String
    Default: 'arn:aws:elasticloadbalancing:eu-central-1:385569096892:targetgroup/grid-target-group/278aecc0fbeadc69'
    Description: ARN of Target Group
  
  SecurityGroup:
    Type: String
    Default: 'sg-0da61d7be0939b1d3'
    
Conditions:
  HasCustomRole: !Not [ !Equals [!Ref 'Role', ''] ]

Resources:
  
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: 'selenium-grid'
  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'TargetGroupArn'
          Type: 'forward'
      LoadBalancerArn: !Ref 'PublicLoadBalancerArn'
      Port: 4444
      Protocol: HTTP
  
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: selenium-grid-ecs
      RetentionInDays: 30
  TaskDefinitionHub:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 4096
      Memory: 8192
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref 'EcsTaskExecutionRole'
      ContainerDefinitions:
        - Name: 'hub'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: 'selenium/hub:3.141.59'
          Environment:
            - Name: 'GRID_BROWSER_TIMEOUT'
              Value: 300
            - Name: 'GRID_TIMEOUT'
              Value: 360
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: 'selenium'
          PortMappings:
            - ContainerPort: 4444
          EntryPoint:
            - 'sh'
            - '-c'
          Command:
            - "export GRID_HUB_HOST=$(curl -s http://169.254.170.2/v2/metadata | jq -r .Containers[0].Networks[0].IPv4Addresses[0]) && /opt/bin/entry_point.sh run"
  TaskDefinitionNodeChrome:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref 'EcsTaskExecutionRole'
      ContainerDefinitions:
        - Name: 'node-chrome'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: 'selenium/node-chrome:3.141.59'
          Environment:
            - Name: 'HUB_HOST'
              Value: !Ref 'PublicLoadBalancer'
            - Name: 'HUB_PORT'
              Value: '4444'
            - Name: 'NODE_MAX_INSTANCES'
              Value: !Ref 'NumberOfChromeInstances'
            - Name: 'NODE_MAX_SESSION'
              Value: !Ref 'NumberOfChromeInstances'
            - Name: 'NODE_PORT'
              Value: '5555'
            - Name: 'DEBIAN_FRONTEND'
              Value: 'noninteractive'
            - Name: 'DEBCONF_NONINTERACTIVE_SEEN'
              Value: 'true'
            - Name: 'DBUS_SESSION_BUS_ADDRESS'
              Value: '/dev/null'
            - Name: 'DISPLAY'
              Value: ':99.0'
            - Name: 'SCREEN_DEPTH'
              Value: '24' 
            - Name: 'SCREEN_HEIGHT'
              Value: '1020'
            - Name: 'SCREEN_WIDTH'
              Value: '1400'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: 'selenium'
          PortMappings:
            - ContainerPort: 5555
        
          EntryPoint:
            - 'sh'
            - '-c'
          Command:
            - "export PRIVATE=$(curl -s http://169.254.170.2/v2/metadata | jq -r .Containers[0].Networks[0].IPv4Addresses[0]); printenv | grep PRIVATE; export REMOTE_HOST=http://$PRIVATE:5555; printenv | grep REMOTE_HOST; /opt/bin/entry_point.sh;"
  ServiceHub:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: 'hub'
      Cluster: !Ref 'ECSCluster'
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref 'SecurityGroup'
          Subnets:
            - 'subnet-0e524374599e43049'
            - 'subnet-097eb27a0f969c8ca'
            - 'subnet-02eb7e6a242f1957c'
      TaskDefinition: !Ref 'TaskDefinitionHub'
      Role:
        Fn::If:
          - 'HasCustomRole'
          - !Ref 'Role'
          - !Ref 'AWS::NoValue'
      LoadBalancers:
        - ContainerName: 'hub'
          ContainerPort: 4444
          TargetGroupArn: !Ref 'TargetGroupArn'
  ServiceNodeChrome:
    Type: AWS::ECS::Service
    DependsOn: ServiceHub
    Properties:
      ServiceName: 'node-chrome'
      Cluster: !Ref 'ECSCluster'
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref 'NumberOfChromeNodes'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref 'SecurityGroup'
          Subnets:
            - 'subnet-0e524374599e43049'
            - 'subnet-097eb27a0f969c8ca'
            - 'subnet-02eb7e6a242f1957c'
      TaskDefinition: !Ref 'TaskDefinitionNodeChrome'
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: 'selenium-grid2'
      Port: 4444
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: 'vpc-0e79a3e4cdf0f1ab9'
  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroupArn'
          Type: 'forward'
      Conditions:
        - Field: path-pattern
          Values: [!Ref 'Path']
      ListenerArn: !Ref 'PublicLoadBalancerListener'
      Priority: !Ref 'Priority'

Outputs:
  ExternalUrl:
    Description: The url of the external Selenium Grid
    Value: !Join ['', ['http://', !Ref 'PublicLoadBalancer', ':4444/grid/console']]
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ExternalUrl' ] ]
