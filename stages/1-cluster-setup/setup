#!/bin/bash
set -e

path=$(pwd)
echo $path
echo '#### AWS CONFIG ####'
mkdir -p ~/.aws
cp $AWS_CREDS ~/.aws/credentials
sed 's|region = us-west-2|region = eu-central-1|' -i ~/.aws/config

CI_PIPELINE_ID=$(echo $CI_PIPELINE_ID)
cluster_name="aws-cluster1-"$CI_PIPELINE_ID
echo "VPC: $DEV_VPC"

git clone https://github.com/openebs/e2e-tests.git
cd e2e-tests/k8s/aws/k8s-installer

sed 's|region: eu-west-2|region: eu-central-1|' -i ./vars.yml
sed 's|zone: eu-west-2a|zone: eu-central-1a|' -i ./vars.yml
sed '$a\vpc_id: '"$DEV_VPC" -i ./vars.yml
sed '$a\subnet_id: '"$DEV_SUBNET" -i ./vars.yml

# Create k8s cluster
echo -e "\n************************ Create cluster *********************************************\n"
ansible-playbook create-aws-cluster.yml -vv --extra-vars "k8s_version=1.16.9 image=ami-03d8059563982d7b0 cluster_name=$cluster_name"

mkdir $path/.kube
mkdir $path/.kube/resources
cat ~/.kube/config > $path/.kube/config
cat ~/.kube/config > $path/.kube/admin.conf
cp -r /tmp/aws/* $path/.kube/resources
ls $path/.kube

# Export Cluster name
CNAME=`cat /tmp/aws/cluster_name.csv | cut -d ',' -f1 | sed -r 's|cluster_name:||'`

touch $path/.kube/cluster1
echo $CNAME > $path/.kube/cluster1
echo "Cluster name: $CNAME"

kubectl get nodes
wget https://raw.githubusercontent.com/openebs/litmus/master/hack/rbac.yaml
kubectl apply -f rbac.yaml
kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default
kubectl create configmap kubeconfig --from-file=$path/.kube/admin.conf -n litmus

echo -e "\n************************ Create firewall rules *********************************************\n"
NGROUP=`aws ec2 describe-security-groups --filters Name=vpc-id,Values=$DEV_VPC Name=group-name,Values=nodes.k8s-$CNAME.k8s.local --query SecurityGroups[].GroupId --region eu-central-1`
NSIG=`echo $NGROUP | awk {'print $2'} | sed -r 's/"+//g'`
MGROUP=`aws ec2 describe-security-groups --filters Name=vpc-id,Values=$DEV_VPC Name=group-name,Values=masters.k8s-$CNAME.k8s.local --query SecurityGroups[].GroupId --region eu-central-1`
MSIG=`echo $MGROUP | awk {'print $2'} | sed -r 's/"+//g'`
aws ec2 authorize-security-group-ingress --group-id $NSIG --protocol all --port all --cidr 0.0.0.0/0 --region eu-central-1
aws ec2 authorize-security-group-ingress --group-id $MSIG --protocol all --port all --cidr 0.0.0.0/0 --region eu-central-1

echo -e "\n[ Print 'k8s version' ] ---------------------------------------------\n"
version=$(kubectl get nodes -o=jsonpath='{.items[0].status.nodeInfo.kubeletVersion}')
echo -e "KubernetesVersion: $version"

echo -e "\n************************ Applying e2e-crd *********************************************\n"
cd ../../../..
kubectl apply -f utils/e2e-crd.yml
