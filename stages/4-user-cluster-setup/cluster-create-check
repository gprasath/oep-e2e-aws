#!/bin/bash

set -e

mkdir -p ~/.kube
mkdir -p /tmp/aws
cp .kube/url ~/.kube/url
cp .kube/resources/id.csv /tmp/aws/id.csv

path=$(pwd)
echo '#### AWS CONFIG ####'
mkdir -p ~/.aws
cp $AWS_CREDS ~/.aws/credentials
ls ~/.aws/
ls ~/.kube

sudo bash -c "aws configure list"
git clone https://github.com/mayadata-io/litmus.git
cd litmus/k8s/aws/k8s-installer

sed 's|region: eu-west-2|region: eu-central-1|' -i ./vars.yml
sed 's|zone: eu-west-2a|zone: eu-central-1a|' -i ./vars.yml

# Fetch director url
url=$(cat ~/.kube/url)

# Cloning oep-e2e repository which contains all the test scripts
git clone https://$username:$password@github.com/mayadata-io/oep-e2e.git

vpcid=`cat /tmp/aws/id.csv | cut -d ',' -f1 | sed -r 's|vpc_id:||'`
sid=`cat /tmp/aws/id.csv | cut -d ',' -f3 | sed -r 's|subnet_id:||'`

# Create k8s cluster
echo "CREATING CLUSTER"
ansible-playbook create-aws-cluster.yml -vv --extra-vars "vpc=$vpcid subnets=$sid k8s_version=1.15.10 image=ami-03d8059563982d7b0"

CNAME=`cat /tmp/aws/cluster_name.csv | cut -d ',' -f1 | sed -r 's|cluster_name:||'`
touch ~/.kube/cluster2
echo $CNAME > ~/.kube/cluster2

# mkdir -p $path/.awscluster
# cat ~/.kube/config > $path/.awscluster/config
# cat ~/.kube/config > $path/.awscluster/admin.conf

# kubectl get nodes

# # Setup litmus on the cluster
# kubectl apply -f oep-e2e/litmus/prerequisite/rbac.yaml
# kubectl apply -f oep-e2e/litmus/prerequisite/crds.yaml 
# # creating docker secret 
# kubectl apply -f oep-e2e/litmus/prerequisite/docker-secret.yml -n litmus
# # creating crb
# kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default
# # creating configmap
# kubectl create configmap kubeconfig --from-file=$path/.awscluster/admin.conf -n litmus
# kubectl create configmap config --from-literal=url=$url -n litmus

# # fetch openebs operator yaml
# openebs_operator=openebs-operator-1.4.0.yaml 
# wget https://openebs.github.io/charts/$openebs_operator
# # set fields required for sparse pool setup
# default_pool_line=$(cat $openebs_operator | grep -n  OPENEBS_IO_INSTALL_DEFAULT_CSTOR_SPARSE_POOL | tail -n +2 | awk -F':' '{print $1}')
# value_line_pool=$(( default_pool_line + 1 ))
# sed -i "${value_line_pool}s/.*/          value: \"true\"/" $openebs_operator
# sparse_line=$(cat $openebs_operator | grep -n  SPARSE_FILE_COUNT | awk -F':' '{print $1}')
# value_line_count=$(( sparse_line + 1 ))
# sed -i "${value_line_count}s/.*/          value: \"1\"/" $openebs_operator
# # deploy openebs operator 
# kubectl apply -f $openebs_operator
# sleep 100
# kubectl get pods -n openebs
# # Deploy application
# app="mongo"
# wget https://raw.githubusercontent.com/mayadata-io/litmus/master/apps/mongodb/deployers/run_litmus_test.yml
# sed -i 's/value: openebs-mongodb/value: openebs-cstor-sparse/g' run_litmus_test.yml
# sed -i -e 's/generateName: litmus-mongodb-/generateName: litmus-mongodb-deploy/g' run_litmus_test.yml
# cat run_litmus_test.yml
# kubectl create -f run_litmus_test.yml
# test_name=litmus-mongodb-deploy
# litmus_pod=$(kubectl get po -n litmus | grep $test_name | awk {'print $1'} | tail -n 1)
# echo $litmus_pod
# job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
# while [[ "$job_status" != "Completed" ]]
# do 
#     job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
#     sleep 6
# done
# kubectl logs -f $litmus_pod -n litmus
# app_ns=$(kubectl get ns | grep $app | awk '{print $1}')
# echo $app_ns
# kubectl get pods -n $app_ns